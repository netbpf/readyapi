name: Deploy Docs
on:
  workflow_run:
    workflows:
      - Build Docs
    types:
      - completed

permissions:
  contents: write
  deployments: write
  issues: write
  pull-requests: write
  statuses: write

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
      - name: Install GitHub Actions dependencies
        run: uv pip install -r requirements-github-actions.txt
      - name: Deploy Docs Status Pending
        run: python ./scripts/deploy_docs_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_SHA: ${{ github.event.workflow_run.head_sha }}
          RUN_ID: ${{ github.run_id }}
      - name: Clean site
        run: |
          rm -rf ./site
          mkdir ./site
      - uses: actions/download-artifact@v4
        with:
          path: ./site/
          pattern: docs-site-*
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Deploy to GitHub Pages
        if: hashFiles('./site/*')
        id: deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -f ./site
          git commit -m "Deploy docs to GitHub Pages"
          git push origin HEAD:gh-pages --force
      - name: Comment Deploy
        run: python ./scripts/deploy_docs_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEPLOY_URL: ${{ steps.deploy.outputs.deployment-url }}
          COMMIT_SHA: ${{ github.event.workflow_run.head_sha }}
          RUN_ID: ${{ github.run_id }}
          IS_DONE: "true"
      - uses: actions/cache@v4
        with:
          key: mkdocs-cards-${{ matrix.lang }}-${{ github.ref }}
          path: docs/${{ matrix.lang }}/.cache
      - uses: actions/cache@v4
        with:
          key: custom-cache-${{ matrix.lang }}-${{ github.ref }}
          path: |
            path/to/cache/dir1
            path/to/cache/dir2

  changes:
    runs-on: ubuntu-latest
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs:
              - README.md
              - docs/**
              - docs_src/**
              - requirements-docs.txt
              - requirements-docs-insiders.txt
              - pyproject.toml
              - mkdocs.yml
              - mkdocs.insiders.yml
              - mkdocs.maybe-insiders.yml
              - mkdocs.no-insiders.yml
              - .github/workflows/build-docs.yml
              - .github/workflows/deploy-docs.yml

  langs:
    runs-on: ubuntu-latest
    needs:
      - changes
    outputs:
      langs: ${{ steps.show-langs.outputs.langs }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
      - name: Install docs extras
        run: |
          uv pip install -r requirements-docs.txt
      - name: Install Material for MkDocs Insiders
        if: ( github.event_name != 'pull_request' || github.secret_source == 'Actions' )
        run: |
          uv pip install -r requirements-docs-insiders.txt
        env:
          TOKEN: ${{ secrets.READYAPI_MKDOCS_MATERIAL }}
      - name: Verify Docs
        run: python ./scripts/docs.py verify-docs
      - name: Export Language Codes
        id: show-langs
        run: |
          echo "langs=$(python ./scripts/docs.py langs-json)" >> $GITHUB_OUTPUT

  build-docs:
    runs-on: ubuntu-latest
    needs:
      - changes
      - langs
    if: |
      needs.changes.outputs.docs == 'true' && 
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    strategy:
      matrix:
        lang: ${{ fromJson(needs.langs.outputs.langs) }}
    environment: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
      - name: Install docs extras
        run: uv pip install -r requirements-docs.txt
      - name: Install Material for MkDocs Insiders
        if: ( github.event_name != 'pull_request' || github.secret_source == 'Actions' )
        run: uv pip install -r requirements-docs-insiders.txt
        env:
          TOKEN: ${{ secrets.READYAPI_MKDOCS_MATERIAL }}
      - name: Build Docs
        env:
          ENVIRONMENT: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}
          BASE_URL: ${{ github.ref == 'refs/heads/master' && 'https://docs.yoursite.com' || 'https://dev-docs.yoursite.com' }}
        run: python ./scripts/docs.py build-lang ${{ matrix.lang }}
      - uses: actions/upload-artifact@v4
        with:
          name: docs-site-${{ matrix.lang }}
          path: ./site/**
          include-hidden-files: true

  build-docs-step:
    if: |
      needs.build-docs.outputs.docs == 'true' && 
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Build Docs
        env:
          ENVIRONMENT: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}
          BASE_URL: ${{ github.ref == 'refs/heads/master' && 'https://docs.yoursite.com' || 'https://dev-docs.yoursite.com' }}
        run: python ./scripts/docs.py build-lang ${{ matrix.lang }}
      - uses: actions/upload-artifact@v4
        with:
          name: docs-site-${{ matrix.lang }}
          path: ./site/**
          include-hidden-files: true

  docs-all-green:
    if: always()
    needs:
      - build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: build-docs
